# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = Python-LowMC
description = LowMC Blockcipher in Python
author = Thorsten Knoll
author-email = info@thorstenknoll.de
license = mit
url = https://github.com/ThorKn/Python-LowMC
long-description = file: README.rst
# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any
# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 3 - Alpha
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Natural Language :: English
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.4
    Programming Language :: Python :: 3.5
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Topic :: Security :: Cryptography


[options]
zip_safe = False
packages = find:
include_package_data = True
package_dir =
    =lowmc
# DON'T CHANGE THE FOLLOWING LINE! IT WILL BE UPDATED BY PYSCAFFOLD!
setup_requires = pyscaffold>=3.1a0,<3.2a0
# Add here dependencies of your project (semicolon/line-separated), e.g.
# install_requires = numpy; scipy
# The usage of test_requires is discouraged, see `Dependency Management` docs
# tests_require = pytest; pytest-cov
# Require a specific Python version, e.g. Python 2.7 or >= 3.4
python_requires = >= 3.4

[options.packages.find]
where = lowmc
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install Python-LowMC[PDF]` like:
# PDF = ReportLab; RXP
# Add here test requirements (semicolon/line-separated)
ALL =
    recommonmark
    sphinx>=1.8
    sphinx_rtd_theme
    isort
    flake8
    pytest
    pytest-cov
    pytest-runner
    tox
DOCS =
    recommonmark
    sphinx
    sphinx_rtd_theme
LINT =
    isort
    flake8
TESTING =
    pytest
    pytest-cov
    pytest-runner
    tox

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = lowmc.module:function
# For example:
# console_scripts =
#     fibonacci = lowmc.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[test]
# py.test options when running `python setup.py test`
# addopts = --verbose
extras = True

[tool:pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts =
#   --cov lowmc --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests

[aliases]
build = bdist_wheel
release = build upload

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = docs/_build

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 3.1
package = lowmc
extensions =
    markdown
    gitlab
    tox
    travis
    pre_commit
